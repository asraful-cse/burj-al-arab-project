{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sunny Ahamed Asraf\\\\Desktop\\\\core-react-project\\\\burj-al-arab\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseConfig from './firebase.config';\nimport { UserContext } from '../../App';\nimport { useHistory, useLocation } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  const history = useHistory();\n  const location = useLocation();\n  const {\n    from\n  } = location.state || {\n    from: {\n      pathname: \"/\"\n    }\n  };\n\n  if (firebase.apps.length === 0) {\n    firebase.initializeApp(firebaseConfig);\n  }\n\n  const handleGoogleSignIn = () => {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(provider).then(result => {\n      const {\n        displayName,\n        email\n      } = result.user;\n      const signedInUser = {\n        name: displayName,\n        email\n      };\n      setLoggedInUser(signedInUser);\n    }).catch(error => {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message; // The email of the user's account used.\n\n      var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n      var credential = error.credential; // ...\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This is Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoogleSignIn,\n      children: \"Google Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"PIailSvkpuRmeZii6BQZ9MYdqB8=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Sunny Ahamed Asraf/Desktop/core-react-project/burj-al-arab/src/components/Login/Login.js"],"names":["React","useContext","firebase","firebaseConfig","UserContext","useHistory","useLocation","Login","loggedInUser","setLoggedInUser","history","location","from","state","pathname","apps","length","initializeApp","handleGoogleSignIn","provider","auth","GoogleAuthProvider","signInWithPopup","then","result","displayName","email","user","signedInUser","name","catch","error","errorCode","code","errorMessage","message","credential"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,cAAxC;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAiCR,UAAU,CAACG,WAAD,CAAjD;AACA,QAAMM,OAAO,GAAGL,UAAU,EAA1B;AACA,QAAMM,QAAQ,GAAGL,WAAW,EAA5B;AACD,QAAK;AAAEM,IAAAA;AAAF,MAAWD,QAAQ,CAACE,KAAT,IAAkB;AAAED,IAAAA,IAAI,EAAE;AAAEE,MAAAA,QAAQ,EAAE;AAAZ;AAAR,GAAlC;;AACC,MAAIZ,QAAQ,CAACa,IAAT,CAAcC,MAAd,KAAyB,CAA7B,EAAgC;AAC5Bd,IAAAA,QAAQ,CAACe,aAAT,CAAuBd,cAAvB;AACH;;AAED,QAAMe,kBAAkB,GAAG,MAAM;AAC7B,QAAIC,QAAQ,GAAG,IAAIjB,QAAQ,CAACkB,IAAT,CAAcC,kBAAlB,EAAf;AAEAnB,IAAAA,QAAQ,CAACkB,IAAT,GACKE,eADL,CACqBH,QADrB,EAC+BI,IAD/B,CACqCC,MAAD,IAAY;AACxC,YAAM;AAAEC,QAAAA,WAAF;AAAeC,QAAAA;AAAf,UAAyBF,MAAM,CAACG,IAAtC;AACA,YAAMC,YAAY,GAAG;AAAEC,QAAAA,IAAI,EAAEJ,WAAR;AAAqBC,QAAAA;AAArB,OAArB;AACAjB,MAAAA,eAAe,CAACmB,YAAD,CAAf;AAEH,KANL,EAMOE,KANP,CAMcC,KAAD,IAAW;AAChB;AACA,UAAIC,SAAS,GAAGD,KAAK,CAACE,IAAtB;AACA,UAAIC,YAAY,GAAGH,KAAK,CAACI,OAAzB,CAHgB,CAIhB;;AACA,UAAIT,KAAK,GAAGK,KAAK,CAACL,KAAlB,CALgB,CAMhB;;AACA,UAAIU,UAAU,GAAGL,KAAK,CAACK,UAAvB,CAPgB,CAQhB;AACH,KAfL;AAgBH,GAnBD;;AAoBA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAElB,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAnCD;;GAAMX,K;UAEcF,U,EACCC,W;;;KAHfC,K;AAqCN,eAAeA,KAAf","sourcesContent":["import React, { useContext } from 'react';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseConfig from './firebase.config';\nimport { UserContext } from '../../App';\nimport { useHistory, useLocation } from 'react-router';\n\nconst Login = () => {\n    const [loggedInUser, setLoggedInUser] =useContext(UserContext);\n    const history = useHistory();\n    const location = useLocation();\n   const{ from } = location.state || { from: { pathname: \"/\" } };\n    if (firebase.apps.length === 0) {\n        firebase.initializeApp(firebaseConfig);\n    }\n\n    const handleGoogleSignIn = () => {\n        var provider = new firebase.auth.GoogleAuthProvider();\n\n        firebase.auth()\n            .signInWithPopup(provider).then((result) => {\n                const { displayName, email } = result.user;\n                const signedInUser = { name: displayName, email }\n                setLoggedInUser(signedInUser);\n\n            }).catch((error) => {\n                // Handle Errors here.\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                // The email of the user's account used.\n                var email = error.email;\n                // The firebase.auth.AuthCredential type that was used.\n                var credential = error.credential;\n                // ...\n            });\n    }\n    return (\n        <div>\n            <h1>This is Login</h1>\n            <button onClick={handleGoogleSignIn}>Google Sign in</button>\n        </div>\n    );\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}